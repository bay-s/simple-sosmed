
import React from 'react'
import Header from './header'
import logo from '../default.jpg'
import { database, storage } from '../firebase'
import { getDownloadURL, getStorage, ref, uploadBytesResumable } from "firebase/storage"
import { collection, addDoc ,getDocs, doc, updateDoc, deleteDoc,onSnapshot, query, where} from 'firebase/firestore/lite';


class User extends React.Component{
    constructor(){
        super()
        this.state = {
       image:null,
       url:''
        }
    }

      
getData = (e) => {
    e.preventDefault()
  getDocs(this.state.data).then(res => {
  console.log( res.docs.map(item => {
    return item.data()
    }));
    })
  
  }

  
    ImageChange = event => {
        console.log(event.target.files);
        if (event.target.files && event.target.files[0]) {
          let img = event.target.files[0];
          console.log(img);
          this.setState({
            image: URL.createObjectURL(img),
            url:img
          });
        }
      };
    
  SUBMIT = (e) => {
      e.preventDefault()
const db = collection(database,"user")
      const spaceRef = ref(storage, `images/${this.state.url.name}`);
      const uploadTask = uploadBytesResumable(spaceRef,this.state.url);
      uploadTask.on('state_changed', 
      (snapshot) => {
        // Observe state change events such as progress, pause, and resume
        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded
        const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;
        console.log('Upload is ' + progress + '% done');
        switch (snapshot.state) {
          case 'paused':
            console.log('Upload is paused');
            break;
          case 'running':
            console.log('Upload is running');
            break;
        }
      }, 
      (error) => {
        // Handle unsuccessful uploads
        console.log(error.message);
      }, 
      () => {
        // Handle successful uploads on complete
        // For instance, get the download URL: https://firebasestorage.googleapis.com/...
        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {
          console.log('File available at', downloadURL);
        });
      }
    );
    
  }
    render(){
return(
<>
<Header />
<div className='user-container'>
    <div className='profile'>
     <div className='image-wrap'>
         <img src={this.state.image === null ? logo : this.state.image} />
     </div>
     <div className='profile-list'>
         <div className='user-list-name'>
         <h4 className='title'>MyAcountOfficial</h4>
         <ul>
          {/* <li><a href='#'>Edit Profile</a></li> */}
       <form onSubmit={this.SUBMIT }>
       <input type='file' name='image' onChange={this.ImageChange }/>
          <button type='submit'>SUBMIT</button>
       </form>
          <li><a href='#'><i class="fa fa-cog" aria-hidden="true"></i></a></li>
         </ul>
         </div>
         <ul className='user-post-info'>
         <li><span>200 posts</span></li>
         <li><a href='#'>0 Follower</a></li>
         <li><a href='#'>0 Followwing</a></li>
        </ul>
        <div className='desc'>
           <h4 className='desc-title'>MyAcountOfficial</h4>
           <p>Official IG account of MyAnimeList.net. Add your favorite anime & manga to your list and share it with your friends! Sign up today!</p>
           <a href='#'>somelink.com</a>
        </div>
     </div>
    </div>

    <div className='user-post'>
    <ul className='post-title'>
     <li><i class="fa fa-camera" aria-hidden="true"></i><a href='#'>posts</a></li>
     <li><i class="fa fa-play-circle-o" aria-hidden="true"></i><a href='#'>Videos</a></li>
     <li><i class="fa fa-tags" aria-hidden="true"></i><a href='#'>Tagged</a></li>
    </ul>
    <div className='card'>
        <h1>SOME CARD</h1>
    </div>
    <div className='card'>
        <h1>SOME CARD</h1>
    </div>
    <div className='card'>
        <h1>SOME CARD</h1>
    </div>
    <div className='card'>
        <h1>SOME CARD</h1>
    </div>
    <div className='card'>
        <h1>SOME CARD</h1>
    </div>
    <div className='card'>
        <h1>SOME CARD</h1>
    </div>
    </div>
</div>
</>
)
    }
}

export default User;